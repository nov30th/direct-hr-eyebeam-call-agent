#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DhrAgentDatabaseUtils
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoftphoneAgentDatabase")]
	public partial class AgentDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertLoginStatus(LoginStatus instance);
    partial void UpdateLoginStatus(LoginStatus instance);
    partial void DeleteLoginStatus(LoginStatus instance);
    partial void InsertOnlineMeeting(OnlineMeeting instance);
    partial void UpdateOnlineMeeting(OnlineMeeting instance);
    partial void DeleteOnlineMeeting(OnlineMeeting instance);
    partial void InsertMeetingLog(MeetingLog instance);
    partial void UpdateMeetingLog(MeetingLog instance);
    partial void DeleteMeetingLog(MeetingLog instance);
    partial void InsertProgramBlackList(ProgramBlackList instance);
    partial void UpdateProgramBlackList(ProgramBlackList instance);
    partial void DeleteProgramBlackList(ProgramBlackList instance);
    partial void InsertProcessKillerLog(ProcessKillerLog instance);
    partial void UpdateProcessKillerLog(ProcessKillerLog instance);
    partial void DeleteProcessKillerLog(ProcessKillerLog instance);
    partial void InsertTimePeriod(TimePeriod instance);
    partial void UpdateTimePeriod(TimePeriod instance);
    partial void DeleteTimePeriod(TimePeriod instance);
    partial void InsertHosts(Hosts instance);
    partial void UpdateHosts(Hosts instance);
    partial void DeleteHosts(Hosts instance);
    partial void InsertDevelopmentUsers(DevelopmentUsers instance);
    partial void UpdateDevelopmentUsers(DevelopmentUsers instance);
    partial void DeleteDevelopmentUsers(DevelopmentUsers instance);
    partial void InsertLoginUsers(LoginUsers instance);
    partial void UpdateLoginUsers(LoginUsers instance);
    partial void DeleteLoginUsers(LoginUsers instance);
    partial void InsertClientOnlineTime(ClientOnlineTime instance);
    partial void UpdateClientOnlineTime(ClientOnlineTime instance);
    partial void DeleteClientOnlineTime(ClientOnlineTime instance);
    partial void InsertNetworkFilters(NetworkFilters instance);
    partial void UpdateNetworkFilters(NetworkFilters instance);
    partial void DeleteNetworkFilters(NetworkFilters instance);
    #endregion
		

		
		public AgentDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgentDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgentDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgentDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LoginStatus> LoginStatus
		{
			get
			{
				return this.GetTable<LoginStatus>();
			}
		}
		
		public System.Data.Linq.Table<OnlineMeeting> OnlineMeetings
		{
			get
			{
				return this.GetTable<OnlineMeeting>();
			}
		}
		
		public System.Data.Linq.Table<MeetingLog> MeetingLogs
		{
			get
			{
				return this.GetTable<MeetingLog>();
			}
		}
		
		public System.Data.Linq.Table<ProgramBlackList> ProgramBlackLists
		{
			get
			{
				return this.GetTable<ProgramBlackList>();
			}
		}
		
		public System.Data.Linq.Table<ProcessKillerLog> ProcessKillerLogs
		{
			get
			{
				return this.GetTable<ProcessKillerLog>();
			}
		}
		
		public System.Data.Linq.Table<TimePeriod> TimePeriod
		{
			get
			{
				return this.GetTable<TimePeriod>();
			}
		}
		
		public System.Data.Linq.Table<Hosts> Hosts
		{
			get
			{
				return this.GetTable<Hosts>();
			}
		}
		
		public System.Data.Linq.Table<DevelopmentUsers> DevelopmentUsers
		{
			get
			{
				return this.GetTable<DevelopmentUsers>();
			}
		}
		
		public System.Data.Linq.Table<LoginUsers> LoginUsers
		{
			get
			{
				return this.GetTable<LoginUsers>();
			}
		}
		
		public System.Data.Linq.Table<ClientOnlineTime> ClientOnlineTime
		{
			get
			{
				return this.GetTable<ClientOnlineTime>();
			}
		}
		
		public System.Data.Linq.Table<NetworkFilters> NetworkFilters
		{
			get
			{
				return this.GetTable<NetworkFilters>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginStatus")]
	public partial class LoginStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Login_Id;
		
		private string _IPAddress;
		
		private string _ComputerName;
		
		private string _CityName;
		
		private string _AreaCode;
		
		private string _ExtensionNumber;
		
		private string _FullName;
		
		private System.DateTime _CreateAt;
		
		private System.DateTime _LastModifiedAt;
		
		private string _MACAddress;
		
		private long _Count;
		
		private string _Version;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogin_IdChanging(long value);
    partial void OnLogin_IdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnAreaCodeChanging(string value);
    partial void OnAreaCodeChanged();
    partial void OnExtensionNumberChanging(string value);
    partial void OnExtensionNumberChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCreateAtChanging(System.DateTime value);
    partial void OnCreateAtChanged();
    partial void OnLastModifiedAtChanging(System.DateTime value);
    partial void OnLastModifiedAtChanged();
    partial void OnMACAddressChanging(string value);
    partial void OnMACAddressChanged();
    partial void OnCountChanging(long value);
    partial void OnCountChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public LoginStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExtensionNumber
		{
			get
			{
				return this._ExtensionNumber;
			}
			set
			{
				if ((this._ExtensionNumber != value))
				{
					this.OnExtensionNumberChanging(value);
					this.SendPropertyChanging();
					this._ExtensionNumber = value;
					this.SendPropertyChanged("ExtensionNumber");
					this.OnExtensionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreateAt
		{
			get
			{
				return this._CreateAt;
			}
			set
			{
				if ((this._CreateAt != value))
				{
					this.OnCreateAtChanging(value);
					this.SendPropertyChanging();
					this._CreateAt = value;
					this.SendPropertyChanged("CreateAt");
					this.OnCreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedAt", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedAt
		{
			get
			{
				return this._LastModifiedAt;
			}
			set
			{
				if ((this._LastModifiedAt != value))
				{
					this.OnLastModifiedAtChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedAt = value;
					this.SendPropertyChanged("LastModifiedAt");
					this.OnLastModifiedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MACAddress
		{
			get
			{
				return this._MACAddress;
			}
			set
			{
				if ((this._MACAddress != value))
				{
					this.OnMACAddressChanging(value);
					this.SendPropertyChanging();
					this._MACAddress = value;
					this.SendPropertyChanged("MACAddress");
					this.OnMACAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="BigInt NOT NULL")]
		public long Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnlineMeetings")]
	public partial class OnlineMeeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Online_Id;
		
		private string _FullName;
		
		private string _UserID;
		
		private System.DateTime _OnlineBegins;
		
		private System.DateTime _OnlineEnds;
		
		private string _RoomName;
		
		private bool _Isquit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOnline_IdChanging(long value);
    partial void OnOnline_IdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnOnlineBeginsChanging(System.DateTime value);
    partial void OnOnlineBeginsChanged();
    partial void OnOnlineEndsChanging(System.DateTime value);
    partial void OnOnlineEndsChanged();
    partial void OnRoomNameChanging(string value);
    partial void OnRoomNameChanged();
    partial void OnIsquitChanging(bool value);
    partial void OnIsquitChanged();
    #endregion
		
		public OnlineMeeting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Online_Id
		{
			get
			{
				return this._Online_Id;
			}
			set
			{
				if ((this._Online_Id != value))
				{
					this.OnOnline_IdChanging(value);
					this.SendPropertyChanging();
					this._Online_Id = value;
					this.SendPropertyChanged("Online_Id");
					this.OnOnline_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineBegins", DbType="DateTime NOT NULL")]
		public System.DateTime OnlineBegins
		{
			get
			{
				return this._OnlineBegins;
			}
			set
			{
				if ((this._OnlineBegins != value))
				{
					this.OnOnlineBeginsChanging(value);
					this.SendPropertyChanging();
					this._OnlineBegins = value;
					this.SendPropertyChanged("OnlineBegins");
					this.OnOnlineBeginsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineEnds", DbType="DateTime NOT NULL")]
		public System.DateTime OnlineEnds
		{
			get
			{
				return this._OnlineEnds;
			}
			set
			{
				if ((this._OnlineEnds != value))
				{
					this.OnOnlineEndsChanging(value);
					this.SendPropertyChanging();
					this._OnlineEnds = value;
					this.SendPropertyChanged("OnlineEnds");
					this.OnOnlineEndsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoomName
		{
			get
			{
				return this._RoomName;
			}
			set
			{
				if ((this._RoomName != value))
				{
					this.OnRoomNameChanging(value);
					this.SendPropertyChanging();
					this._RoomName = value;
					this.SendPropertyChanged("RoomName");
					this.OnRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isquit", DbType="Bit NOT NULL")]
		public bool Isquit
		{
			get
			{
				return this._Isquit;
			}
			set
			{
				if ((this._Isquit != value))
				{
					this.OnIsquitChanging(value);
					this.SendPropertyChanging();
					this._Isquit = value;
					this.SendPropertyChanged("Isquit");
					this.OnIsquitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingLogs")]
	public partial class MeetingLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MeetingLog_Id;
		
		private int _Status;
		
		private string _FullName;
		
		private string _RoomName;
		
		private System.DateTime _EventTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingLog_IdChanging(long value);
    partial void OnMeetingLog_IdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnRoomNameChanging(string value);
    partial void OnRoomNameChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    #endregion
		
		public MeetingLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingLog_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MeetingLog_Id
		{
			get
			{
				return this._MeetingLog_Id;
			}
			set
			{
				if ((this._MeetingLog_Id != value))
				{
					this.OnMeetingLog_IdChanging(value);
					this.SendPropertyChanging();
					this._MeetingLog_Id = value;
					this.SendPropertyChanged("MeetingLog_Id");
					this.OnMeetingLog_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoomName
		{
			get
			{
				return this._RoomName;
			}
			set
			{
				if ((this._RoomName != value))
				{
					this.OnRoomNameChanging(value);
					this.SendPropertyChanging();
					this._RoomName = value;
					this.SendPropertyChanged("RoomName");
					this.OnRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramBlackList")]
	public partial class ProgramBlackList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _BlockApplication_Id;
		
		private string _ApplicationName;
		
		private string _WindowName;
		
		private bool _IsMustBeSame;
		
		private string _FileName;
		
		private bool _MatchFileName;
		
		private bool _MatchWindowName;
		
		private string _ExceptionUsers;
		
		private string _Memo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockApplication_IdChanging(long value);
    partial void OnBlockApplication_IdChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnWindowNameChanging(string value);
    partial void OnWindowNameChanged();
    partial void OnIsMustBeSameChanging(bool value);
    partial void OnIsMustBeSameChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnMatchFileNameChanging(bool value);
    partial void OnMatchFileNameChanged();
    partial void OnMatchWindowNameChanging(bool value);
    partial void OnMatchWindowNameChanged();
    partial void OnExceptionUsersChanging(string value);
    partial void OnExceptionUsersChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    #endregion
		
		public ProgramBlackList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockApplication_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long BlockApplication_Id
		{
			get
			{
				return this._BlockApplication_Id;
			}
			set
			{
				if ((this._BlockApplication_Id != value))
				{
					this.OnBlockApplication_IdChanging(value);
					this.SendPropertyChanging();
					this._BlockApplication_Id = value;
					this.SendPropertyChanged("BlockApplication_Id");
					this.OnBlockApplication_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WindowName
		{
			get
			{
				return this._WindowName;
			}
			set
			{
				if ((this._WindowName != value))
				{
					this.OnWindowNameChanging(value);
					this.SendPropertyChanging();
					this._WindowName = value;
					this.SendPropertyChanged("WindowName");
					this.OnWindowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMustBeSame", DbType="Bit NOT NULL")]
		public bool IsMustBeSame
		{
			get
			{
				return this._IsMustBeSame;
			}
			set
			{
				if ((this._IsMustBeSame != value))
				{
					this.OnIsMustBeSameChanging(value);
					this.SendPropertyChanging();
					this._IsMustBeSame = value;
					this.SendPropertyChanged("IsMustBeSame");
					this.OnIsMustBeSameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchFileName", DbType="Bit NOT NULL")]
		public bool MatchFileName
		{
			get
			{
				return this._MatchFileName;
			}
			set
			{
				if ((this._MatchFileName != value))
				{
					this.OnMatchFileNameChanging(value);
					this.SendPropertyChanging();
					this._MatchFileName = value;
					this.SendPropertyChanged("MatchFileName");
					this.OnMatchFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchWindowName", DbType="Bit NOT NULL")]
		public bool MatchWindowName
		{
			get
			{
				return this._MatchWindowName;
			}
			set
			{
				if ((this._MatchWindowName != value))
				{
					this.OnMatchWindowNameChanging(value);
					this.SendPropertyChanging();
					this._MatchWindowName = value;
					this.SendPropertyChanged("MatchWindowName");
					this.OnMatchWindowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionUsers", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ExceptionUsers
		{
			get
			{
				return this._ExceptionUsers;
			}
			set
			{
				if ((this._ExceptionUsers != value))
				{
					this.OnExceptionUsersChanging(value);
					this.SendPropertyChanging();
					this._ExceptionUsers = value;
					this.SendPropertyChanged("ExceptionUsers");
					this.OnExceptionUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(50)")]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcessKillerLogs")]
	public partial class ProcessKillerLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ProcessKillerLogId;
		
		private System.DateTime _KilledAt;
		
		private string _FullName;
		
		private string _ComputerName;
		
		private string _KeyWords;
		
		private string _WindowsName;
		
		private string _ProcessName;
		
		private string _ProcessPath;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessKillerLogIdChanging(long value);
    partial void OnProcessKillerLogIdChanged();
    partial void OnKilledAtChanging(System.DateTime value);
    partial void OnKilledAtChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnWindowsNameChanging(string value);
    partial void OnWindowsNameChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnProcessPathChanging(string value);
    partial void OnProcessPathChanged();
    #endregion
		
		public ProcessKillerLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessKillerLogId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ProcessKillerLogId
		{
			get
			{
				return this._ProcessKillerLogId;
			}
			set
			{
				if ((this._ProcessKillerLogId != value))
				{
					this.OnProcessKillerLogIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessKillerLogId = value;
					this.SendPropertyChanged("ProcessKillerLogId");
					this.OnProcessKillerLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KilledAt", DbType="DateTime NOT NULL")]
		public System.DateTime KilledAt
		{
			get
			{
				return this._KilledAt;
			}
			set
			{
				if ((this._KilledAt != value))
				{
					this.OnKilledAtChanging(value);
					this.SendPropertyChanging();
					this._KilledAt = value;
					this.SendPropertyChanged("KilledAt");
					this.OnKilledAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowsName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WindowsName
		{
			get
			{
				return this._WindowsName;
			}
			set
			{
				if ((this._WindowsName != value))
				{
					this.OnWindowsNameChanging(value);
					this.SendPropertyChanging();
					this._WindowsName = value;
					this.SendPropertyChanged("WindowsName");
					this.OnWindowsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProcessName
		{
			get
			{
				return this._ProcessName;
			}
			set
			{
				if ((this._ProcessName != value))
				{
					this.OnProcessNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessName = value;
					this.SendPropertyChanged("ProcessName");
					this.OnProcessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessPath", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProcessPath
		{
			get
			{
				return this._ProcessPath;
			}
			set
			{
				if ((this._ProcessPath != value))
				{
					this.OnProcessPathChanging(value);
					this.SendPropertyChanging();
					this._ProcessPath = value;
					this.SendPropertyChanged("ProcessPath");
					this.OnProcessPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimePeriod")]
	public partial class TimePeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimePeriod_Id;
		
		private string _TimeName;
		
		private int _StartAt;
		
		private int _EndAt;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimePeriod_IdChanging(int value);
    partial void OnTimePeriod_IdChanged();
    partial void OnTimeNameChanging(string value);
    partial void OnTimeNameChanged();
    partial void OnStartAtChanging(int value);
    partial void OnStartAtChanged();
    partial void OnEndAtChanging(int value);
    partial void OnEndAtChanged();
    #endregion
		
		public TimePeriod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimePeriod_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimePeriod_Id
		{
			get
			{
				return this._TimePeriod_Id;
			}
			set
			{
				if ((this._TimePeriod_Id != value))
				{
					this.OnTimePeriod_IdChanging(value);
					this.SendPropertyChanging();
					this._TimePeriod_Id = value;
					this.SendPropertyChanged("TimePeriod_Id");
					this.OnTimePeriod_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TimeName
		{
			get
			{
				return this._TimeName;
			}
			set
			{
				if ((this._TimeName != value))
				{
					this.OnTimeNameChanging(value);
					this.SendPropertyChanging();
					this._TimeName = value;
					this.SendPropertyChanged("TimeName");
					this.OnTimeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAt", DbType="Int NOT NULL")]
		public int StartAt
		{
			get
			{
				return this._StartAt;
			}
			set
			{
				if ((this._StartAt != value))
				{
					this.OnStartAtChanging(value);
					this.SendPropertyChanging();
					this._StartAt = value;
					this.SendPropertyChanged("StartAt");
					this.OnStartAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAt", DbType="Int NOT NULL")]
		public int EndAt
		{
			get
			{
				return this._EndAt;
			}
			set
			{
				if ((this._EndAt != value))
				{
					this.OnEndAtChanging(value);
					this.SendPropertyChanging();
					this._EndAt = value;
					this.SendPropertyChanged("EndAt");
					this.OnEndAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hosts")]
	public partial class Hosts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Hosts_Id;
		
		private string _OfficeLocation;
		
		private string _MemberNames;
		
		private string _ExceptionUsers;
		
		private string _HostsContent;
		
		private string _TimePeriod;
		
		private int _Pri;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHosts_IdChanging(int value);
    partial void OnHosts_IdChanged();
    partial void OnOfficeLocationChanging(string value);
    partial void OnOfficeLocationChanged();
    partial void OnMemberNamesChanging(string value);
    partial void OnMemberNamesChanged();
    partial void OnExceptionUsersChanging(string value);
    partial void OnExceptionUsersChanged();
    partial void OnHostsContentChanging(string value);
    partial void OnHostsContentChanged();
    partial void OnTimePeriodChanging(string value);
    partial void OnTimePeriodChanged();
    partial void OnPriChanging(int value);
    partial void OnPriChanged();
    #endregion
		
		public Hosts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hosts_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Hosts_Id
		{
			get
			{
				return this._Hosts_Id;
			}
			set
			{
				if ((this._Hosts_Id != value))
				{
					this.OnHosts_IdChanging(value);
					this.SendPropertyChanging();
					this._Hosts_Id = value;
					this.SendPropertyChanged("Hosts_Id");
					this.OnHosts_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeLocation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OfficeLocation
		{
			get
			{
				return this._OfficeLocation;
			}
			set
			{
				if ((this._OfficeLocation != value))
				{
					this.OnOfficeLocationChanging(value);
					this.SendPropertyChanging();
					this._OfficeLocation = value;
					this.SendPropertyChanged("OfficeLocation");
					this.OnOfficeLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNames", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MemberNames
		{
			get
			{
				return this._MemberNames;
			}
			set
			{
				if ((this._MemberNames != value))
				{
					this.OnMemberNamesChanging(value);
					this.SendPropertyChanging();
					this._MemberNames = value;
					this.SendPropertyChanged("MemberNames");
					this.OnMemberNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionUsers", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ExceptionUsers
		{
			get
			{
				return this._ExceptionUsers;
			}
			set
			{
				if ((this._ExceptionUsers != value))
				{
					this.OnExceptionUsersChanging(value);
					this.SendPropertyChanging();
					this._ExceptionUsers = value;
					this.SendPropertyChanged("ExceptionUsers");
					this.OnExceptionUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostsContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HostsContent
		{
			get
			{
				return this._HostsContent;
			}
			set
			{
				if ((this._HostsContent != value))
				{
					this.OnHostsContentChanging(value);
					this.SendPropertyChanging();
					this._HostsContent = value;
					this.SendPropertyChanged("HostsContent");
					this.OnHostsContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimePeriod", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TimePeriod
		{
			get
			{
				return this._TimePeriod;
			}
			set
			{
				if ((this._TimePeriod != value))
				{
					this.OnTimePeriodChanging(value);
					this.SendPropertyChanging();
					this._TimePeriod = value;
					this.SendPropertyChanged("TimePeriod");
					this.OnTimePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pri", DbType="Int NOT NULL")]
		public int Pri
		{
			get
			{
				return this._Pri;
			}
			set
			{
				if ((this._Pri != value))
				{
					this.OnPriChanging(value);
					this.SendPropertyChanging();
					this._Pri = value;
					this.SendPropertyChanged("Pri");
					this.OnPriChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DevelopmentUsers")]
	public partial class DevelopmentUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DevelopmentUsers_Id;
		
		private string _DevelopmentName;
		
		private string _DevelopmentExt;
		
		private System.DateTime _CreatedAt;
		
		private bool _IsIgnoreAllRules;
		
		private bool _IsAdmin;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDevelopmentUsers_IdChanging(int value);
    partial void OnDevelopmentUsers_IdChanged();
    partial void OnDevelopmentNameChanging(string value);
    partial void OnDevelopmentNameChanged();
    partial void OnDevelopmentExtChanging(string value);
    partial void OnDevelopmentExtChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnIsIgnoreAllRulesChanging(bool value);
    partial void OnIsIgnoreAllRulesChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    #endregion
		
		public DevelopmentUsers()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentUsers_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DevelopmentUsers_Id
		{
			get
			{
				return this._DevelopmentUsers_Id;
			}
			set
			{
				if ((this._DevelopmentUsers_Id != value))
				{
					this.OnDevelopmentUsers_IdChanging(value);
					this.SendPropertyChanging();
					this._DevelopmentUsers_Id = value;
					this.SendPropertyChanged("DevelopmentUsers_Id");
					this.OnDevelopmentUsers_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DevelopmentName
		{
			get
			{
				return this._DevelopmentName;
			}
			set
			{
				if ((this._DevelopmentName != value))
				{
					this.OnDevelopmentNameChanging(value);
					this.SendPropertyChanging();
					this._DevelopmentName = value;
					this.SendPropertyChanged("DevelopmentName");
					this.OnDevelopmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentExt", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DevelopmentExt
		{
			get
			{
				return this._DevelopmentExt;
			}
			set
			{
				if ((this._DevelopmentExt != value))
				{
					this.OnDevelopmentExtChanging(value);
					this.SendPropertyChanging();
					this._DevelopmentExt = value;
					this.SendPropertyChanged("DevelopmentExt");
					this.OnDevelopmentExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIgnoreAllRules", DbType="Bit NOT NULL")]
		public bool IsIgnoreAllRules
		{
			get
			{
				return this._IsIgnoreAllRules;
			}
			set
			{
				if ((this._IsIgnoreAllRules != value))
				{
					this.OnIsIgnoreAllRulesChanging(value);
					this.SendPropertyChanging();
					this._IsIgnoreAllRules = value;
					this.SendPropertyChanged("IsIgnoreAllRules");
					this.OnIsIgnoreAllRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginUsers")]
	public partial class LoginUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Login_id;
		
		private string _Username;
		
		private string _Password;
		
		private int _Pri;
		
		private System.DateTime _LastLogin;
		
		private string _LastLoginIP;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogin_idChanging(int value);
    partial void OnLogin_idChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPriChanging(int value);
    partial void OnPriChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    partial void OnLastLoginIPChanging(string value);
    partial void OnLastLoginIPChanged();
    #endregion
		
		public LoginUsers()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Login_id
		{
			get
			{
				return this._Login_id;
			}
			set
			{
				if ((this._Login_id != value))
				{
					this.OnLogin_idChanging(value);
					this.SendPropertyChanging();
					this._Login_id = value;
					this.SendPropertyChanged("Login_id");
					this.OnLogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pri", DbType="Int NOT NULL")]
		public int Pri
		{
			get
			{
				return this._Pri;
			}
			set
			{
				if ((this._Pri != value))
				{
					this.OnPriChanging(value);
					this.SendPropertyChanging();
					this._Pri = value;
					this.SendPropertyChanged("Pri");
					this.OnPriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime NOT NULL")]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastLoginIP
		{
			get
			{
				return this._LastLoginIP;
			}
			set
			{
				if ((this._LastLoginIP != value))
				{
					this.OnLastLoginIPChanging(value);
					this.SendPropertyChanging();
					this._LastLoginIP = value;
					this.SendPropertyChanged("LastLoginIP");
					this.OnLastLoginIPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientOnlineTime")]
	public partial class ClientOnlineTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _DayAt;
		
		private System.DateTime _LoginAt;
		
		private System.DateTime _LastLoginAt;
		
		private long _OnlineMins;
		
		private string _Name;
		
		private string _ExtensionNumber;
		
		private string _ComputerName;
		
		private string _Memo;
		
		private bool _IsOnline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDayAtChanging(System.DateTime value);
    partial void OnDayAtChanged();
    partial void OnLoginAtChanging(System.DateTime value);
    partial void OnLoginAtChanged();
    partial void OnLastLoginAtChanging(System.DateTime value);
    partial void OnLastLoginAtChanged();
    partial void OnOnlineMinsChanging(long value);
    partial void OnOnlineMinsChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExtensionNumberChanging(string value);
    partial void OnExtensionNumberChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    #endregion
		
		public ClientOnlineTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayAt", DbType="Date NOT NULL")]
		public System.DateTime DayAt
		{
			get
			{
				return this._DayAt;
			}
			set
			{
				if ((this._DayAt != value))
				{
					this.OnDayAtChanging(value);
					this.SendPropertyChanging();
					this._DayAt = value;
					this.SendPropertyChanged("DayAt");
					this.OnDayAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginAt", DbType="DateTime NOT NULL")]
		public System.DateTime LoginAt
		{
			get
			{
				return this._LoginAt;
			}
			set
			{
				if ((this._LoginAt != value))
				{
					this.OnLoginAtChanging(value);
					this.SendPropertyChanging();
					this._LoginAt = value;
					this.SendPropertyChanged("LoginAt");
					this.OnLoginAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginAt", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginAt
		{
			get
			{
				return this._LastLoginAt;
			}
			set
			{
				if ((this._LastLoginAt != value))
				{
					this.OnLastLoginAtChanging(value);
					this.SendPropertyChanging();
					this._LastLoginAt = value;
					this.SendPropertyChanged("LastLoginAt");
					this.OnLastLoginAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineMins", DbType="BigInt NOT NULL")]
		public long OnlineMins
		{
			get
			{
				return this._OnlineMins;
			}
			set
			{
				if ((this._OnlineMins != value))
				{
					this.OnOnlineMinsChanging(value);
					this.SendPropertyChanging();
					this._OnlineMins = value;
					this.SendPropertyChanged("OnlineMins");
					this.OnOnlineMinsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ExtensionNumber
		{
			get
			{
				return this._ExtensionNumber;
			}
			set
			{
				if ((this._ExtensionNumber != value))
				{
					this.OnExtensionNumberChanging(value);
					this.SendPropertyChanging();
					this._ExtensionNumber = value;
					this.SendPropertyChanged("ExtensionNumber");
					this.OnExtensionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(MAX)")]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NetworkFilters")]
	public partial class NetworkFilters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Filter_Id;
		
		private string _OfficeLocation;
		
		private string _MemberNames;
		
		private string _ExceptionUsers;
		
		private string _FilterContent;
		
		private string _TimePeriod;
		
		private int _Pri;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFilter_IdChanging(int value);
    partial void OnFilter_IdChanged();
    partial void OnOfficeLocationChanging(string value);
    partial void OnOfficeLocationChanged();
    partial void OnMemberNamesChanging(string value);
    partial void OnMemberNamesChanged();
    partial void OnExceptionUsersChanging(string value);
    partial void OnExceptionUsersChanged();
    partial void OnFilterContentChanging(string value);
    partial void OnFilterContentChanged();
    partial void OnTimePeriodChanging(string value);
    partial void OnTimePeriodChanged();
    partial void OnPriChanging(int value);
    partial void OnPriChanged();
    #endregion
		
		public NetworkFilters()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filter_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Filter_Id
		{
			get
			{
				return this._Filter_Id;
			}
			set
			{
				if ((this._Filter_Id != value))
				{
					this.OnFilter_IdChanging(value);
					this.SendPropertyChanging();
					this._Filter_Id = value;
					this.SendPropertyChanged("Filter_Id");
					this.OnFilter_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeLocation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OfficeLocation
		{
			get
			{
				return this._OfficeLocation;
			}
			set
			{
				if ((this._OfficeLocation != value))
				{
					this.OnOfficeLocationChanging(value);
					this.SendPropertyChanging();
					this._OfficeLocation = value;
					this.SendPropertyChanged("OfficeLocation");
					this.OnOfficeLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNames", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MemberNames
		{
			get
			{
				return this._MemberNames;
			}
			set
			{
				if ((this._MemberNames != value))
				{
					this.OnMemberNamesChanging(value);
					this.SendPropertyChanging();
					this._MemberNames = value;
					this.SendPropertyChanged("MemberNames");
					this.OnMemberNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionUsers", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ExceptionUsers
		{
			get
			{
				return this._ExceptionUsers;
			}
			set
			{
				if ((this._ExceptionUsers != value))
				{
					this.OnExceptionUsersChanging(value);
					this.SendPropertyChanging();
					this._ExceptionUsers = value;
					this.SendPropertyChanged("ExceptionUsers");
					this.OnExceptionUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FilterContent
		{
			get
			{
				return this._FilterContent;
			}
			set
			{
				if ((this._FilterContent != value))
				{
					this.OnFilterContentChanging(value);
					this.SendPropertyChanging();
					this._FilterContent = value;
					this.SendPropertyChanged("FilterContent");
					this.OnFilterContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimePeriod", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TimePeriod
		{
			get
			{
				return this._TimePeriod;
			}
			set
			{
				if ((this._TimePeriod != value))
				{
					this.OnTimePeriodChanging(value);
					this.SendPropertyChanging();
					this._TimePeriod = value;
					this.SendPropertyChanged("TimePeriod");
					this.OnTimePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pri", DbType="Int NOT NULL")]
		public int Pri
		{
			get
			{
				return this._Pri;
			}
			set
			{
				if ((this._Pri != value))
				{
					this.OnPriChanging(value);
					this.SendPropertyChanging();
					this._Pri = value;
					this.SendPropertyChanged("Pri");
					this.OnPriChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
