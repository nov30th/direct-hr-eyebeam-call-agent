<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAA
        AAgAAAAKAAAADAAAAAwAAAAMAAAACgAAAAgAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAQAAAAMAAAAEIAAABKAAAASgAAADwAAABGAAAASAAAAEIAAAAyAAAAEgAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAoAAAAqAAAAuwAAAPUAAAD1AAAA4wAAAG4AAADTAAAA9QAAAPUAAADXAAAANAAA
        AA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAeICAgoS0sLP8sLCz/JCMj4wEAAGYnJybfKSkp/yop
        Kf8cGxvDAAAAJAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQUBAfkpJSP9KSUj/PTw73wcH
        By5GRUTdSUhH/0hHRv8xMDCpAgICBgAAAAIAAAACAAAABAAAAAYAAAAIAAAACgAAAAwAAAAOAAAADgAA
        AA4AAAAOAAAADAAAAAwAAAAKAAAACgAAAAgAAAAGAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARENDdkpJ
        R/9KSUj/QD8+4ygnJxZISEfjSklI/0lIR/80MzOpDAwMAgAAAAYAAAAMAAAAEgAAABYAAAAWAAAAGAAA
        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
        DCoAAAAAcG5qZtbV0wpYVlECkIyEYggICJcICAj/CQkJ/wgICMMSM0D9LGyE/zN2j/8zdo//NHeP/zJm
        ef8zdI3/M3aP/zJ1jv8rbIOPAAAAAAAAAAAAAAAAJCQkIiUlJfUgICD/HBwc/yUlJf8mJib/JiYm/xwc
        HP8kJCT/JiYm/yYmJv8mJib/FhYW/yYmJv8pMDqlUGN/o011sXBFdL12UGuYz1BYfv9RXYX/U2eU9Vp4
        qP9Qb57/VmqV+2CEvrlmkM+nbo28w3OZ04l3ndZugJKumzdCVLcbICf/ERMW/wsLDOMQLDf/LWyE/zR3
        kP80d5D/NHeQ/zR3kP81d5D/NXiR/zZ4kf8tbYV6AAAAAAAAAAAAAAAAJCQkJiUlJfUfHx//Hh4e/yYm
        Jv8mJib/JiYm/yUlJf8mJib/JiYm/yYmJv8mJib/GBgY/yUlJf86T279VIPK/1aEy/9Xhsz/WIbN/1iH
        zf9Yh87/WIfO/1iHzv9Yh87/WIfO/1iHzv9Yh87/WYfO/1qIzv9bic//XovQ/2KN0P9kjcr/YYW7/1Zz
        n/1DZYf/dJy0/4Oot/+Eq7n/iK69/Yuxv/2RtcL/lbfF/4uwvu9Qg5YoAAAAAAAAAAAAAAAAJCQkLCUl
        JfkfHx//ICAg/yUlJf8mJib/JiYm/xwcHP8kJCT/JiYm/yYmJv8mJib/Ghoa/yUlJf9BVXL/ZY/N/2OM
        yf9kjs3/Zo3I/2OOzv9lkNH/ZZDR/2WQ0f9lkNH/ZZDR/2WPz/9ljMj/XH63/12Cvf9dg7z/XIC3/157
        rv9hh8L/ZZDR/2WQ0f9lkNH/YYvK/z9Xev8mJyb9Y46u+199keliX1ebq7GvVLjL0hoAAAAAAAAAAAAA
        AAAAAAAAJCQkMCUlJfkgICD/IiIi/yYmJv8nJyf/Jycn/yUlJf8nJyf/Jycn/yYmJv8mJib/HBwc/yYm
        Jv9mbHX/zNTe/8rP1/+zucP/wcTL/7G8zf+DncP/cpfP/3Ob1f9zm9X/dJvV/3qKo/+Le3r/o4GE/4eP
        ov98krD/d5C1/3iQuf9zlMf/c5jQ/3KZ0/9zm9b/cZfR/0pihv8zNTb/fp63/3uVp8F1ZVNAmpeQOAAA
        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
        XxxJapHzTGuP/2CMvf9NbI/zMUNZKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw/NGBoc/zMz
        NP9AQkT/Jycn/yEhIZMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAoKClQUGB3/Kywu/0NIUP8pKSv/IyMjZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAhISGHLy4v+zs8PP8/P0D9IiIi6Q4ODl4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABoaGi4pKSnrODg5/UFBQvkhIiLlEBAQVgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAmJiYCNzc3MkFBQkQ9PT0kKioqEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwbHAAyMjMmPj4/WD8/QC4lJSYYDg4OAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>